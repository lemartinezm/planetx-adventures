---
import { Image } from "astro:assets";
import StarsRating from "../rating/StarsRating.astro";
import type { CardData } from "../../lib/data";

interface Props {
  cardData: CardData;
}

const { cardData } = Astro.props;
---

<article class="event-card-container">
  <Image
    src={cardData.image}
    alt="Card image"
    width="350"
    height="350"
    class="event-card-image"
  />
  <div class="event-card-description-container">
    <div class="event-card-title-stars-container">
      <h3 class="event-card-title">{cardData.title}</h3>
      <StarsRating rating={cardData.rating} />
    </div>

    <p class="event-card-description">
      {cardData.description}
    </p>
    <p class="event-card-views-likes">
      {cardData.views} views &middot; {cardData.likes} likes
    </p>
    <div class="event-card-button-info-container">
      <button class="event-card-button">See Details</button>
      <p class="event-card-info">
        Starts at <strong>${cardData.price}</strong> / {cardData.priceUnit}
      </p>
    </div>
  </div>

  <dialog id={`event-modal-${cardData.id}`} class="event-modal-container">
    <div class="event-modal">
      <button class="modal-close-button" autofocus>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          ><path
            fill="currentColor"
            d="M6.4 19L5 17.6l5.6-5.6L5 6.4L6.4 5l5.6 5.6L17.6 5L19 6.4L13.4 12l5.6 5.6l-1.4 1.4l-5.6-5.6L6.4 19Z"
          ></path></svg
        >
      </button>
      <h4 class="event-modal-title">{cardData.modalTitle}</h4>

      <iframe
        class="event-modal-video"
        width="480"
        height="360"
        src={cardData.videoLink}
        title="YouTube video player"
        frameborder="0"
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
        allowfullscreen></iframe>

      <div class="event-modal-packages-container">
        <p class="event-modal-packages-title">
          Sample Pricing for {cardData.modalTitle}
        </p>
        <p class="event-modal-packages-description">
          Note: The following pricing is fictional and for illustrative purposes
          only.
        </p>
        {
          cardData.packagesExample.map((item) => (
            <div class="event-modal-package">
              <h5 class="event-modal-package-title">{item.title}</h5>
              <ul>
                {item.activities.map((activity) => (
                  <li class="event-modal-activity">{activity}</li>
                ))}
              </ul>
              <strong class="event-modal-package-pricing">
                {item.pricing}
              </strong>
            </div>
          ))
        }
      </div>
    </div>
  </dialog>
</article>

<script>
  const buttons = document.querySelectorAll(
    ".event-card-button",
  ) as NodeListOf<HTMLButtonElement>;
  const dialogs = document.querySelectorAll(
    `.event-modal-container`,
  ) as NodeListOf<HTMLDialogElement>;
  const closeButtons = document.querySelectorAll(
    ".event-modal .modal-close-button",
  ) as NodeListOf<HTMLButtonElement>;

  buttons.forEach((button, index) => {
    button?.addEventListener("click", () => {
      dialogs[index].showModal();
    });
  });

  closeButtons.forEach((closeButton, index) => {
    closeButton?.addEventListener("click", () => {
      dialogs[index].close();
    });
  });

  dialogs.forEach((dialog) => {
    dialog.addEventListener("click", (event) => {
      const target = event.target as HTMLDialogElement;
      if (!target.closest(".event-modal")) {
        target.close();
      }
    });
  });
</script>

<style>
  .event-card-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .event-card-image {
    width: 100%;
    object-fit: cover;
    flex: 0.9;
  }

  .event-card-description-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    flex: 1;
  }

  .event-card-title-stars-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .event-card-title {
    font-weight: 500;
    font-size: 1.25rem;
    color: var(--black);
  }

  .event-card-description {
    color: var(--black-75);
  }

  .event-card-views-likes {
    color: var(--black-75);
  }

  .event-card-button-info-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
  }

  .event-card-button {
    background-color: transparent;
    border: 1px solid var(--black);
    color: var(--black);
    font-weight: 500;
    padding: 0.75rem 1.5rem;
    border-radius: 2rem;
    font-size: 1rem;
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
    transition:
      color 0.2s,
      background-color 0.2s,
      box-shadow 0.2s;
    box-shadow: 0 0 0 0 var(--black);
  }

  .event-card-button:hover {
    cursor: pointer;
    background-color: var(--black);
    color: var(--white);
  }

  .event-card-info {
    color: var(--black-75);
  }

  .event-card-info strong {
    color: var(--black);
  }

  .event-modal {
    display: flex;
    flex-direction: column;
    width: 100%;
    padding: 1rem;
    gap: 1rem;
    color: var(--black);
  }

  .modal-close-button {
    cursor: pointer;
    background-color: transparent;
    border: none;
    color: var(--black);
    right: 1rem;
    position: absolute;
  }

  .event-modal-title {
    font-weight: 500;
    font-size: 1.25rem;
  }

  .event-modal-video {
    width: 100%;
    height: 15rem;
  }

  .event-modal-packages-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .event-modal-packages-title {
    font-size: 1rem;
    font-weight: 500;
  }

  .event-modal-packages-description {
    font-size: 0.75rem;
    font-style: italic;
    color: var(--black-75);
  }

  .event-modal-package {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .event-modal-package-title {
    font-size: 1rem;
    font-weight: 500;
  }

  .event-modal-activity {
    list-style: initial;
    margin-left: 1.25rem;
    font-size: 1rem;
  }

  .event-modal-package-pricing {
    font-size: 1rem;
    text-align: end;
  }

  .event-modal-container[open] {
    opacity: 1;
  }

  .event-modal-container {
    border: none;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    opacity: 0;
    transition:
      opacity 0.3s ease-out,
      transform 0.3s ease-out,
      overlay 0.3s ease-out allow-discrete,
      display 0.3s ease-out allow-discrete;
  }

  @starting-style {
    .event-modal-container[open] {
      opacity: 0;
    }
  }

  .event-modal-container::backdrop {
    transition:
      display 0.3s allow-discrete,
      overlay 0.3s allow-discrete,
      background-color 0.3s;
  }

  .event-modal-container[open]::backdrop {
    background-color: var(--dark-blue-transparent);
  }

  @starting-style {
    .event-modal-container[open]::backdrop {
      background-color: transparent;
    }
  }

  @media screen and (min-width: 1024px) {
    .event-card-container:nth-child(2n-1) {
      flex-direction: row;
      gap: 4rem;
    }

    .event-card-container:nth-child(2n) {
      flex-direction: row-reverse;
      gap: 4rem;
    }

    .event-card-description-container {
      justify-content: center;
    }
  }
</style>
