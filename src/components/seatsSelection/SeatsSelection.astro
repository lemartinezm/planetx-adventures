---
import { seatsList } from "../../lib/data";
import Sending from "../loader/Sending.astro";
const seatsLeftSide = seatsList.slice(0, seatsList.length / 2);
const seatsRightSide = seatsList.slice(seatsList.length / 2);
---

<form class="seats-selection-form" id="seats-selection-form">
  <div class="spaceship">
    <div class="cockpit">Rocket</div>

    <div class="seats-selection">
      <div class="seats-exit-signal-container">
        <div class="seats-exit-signal seats-exit-signal-left">Exit</div>
      </div>
      <div class="seats-exit-signal-container">
        <div class="seats-exit-signal seats-exit-signal-right">Exit</div>
      </div>
      <div class="seats-side-container">
        {
          seatsLeftSide.map((seat) => (
            <label class="seat-selector">
              <input
                class="seat-input-radio"
                type="radio"
                name="seat"
                id={seat.code}
                required
                value={seat.code}
              />
              <svg
                class="seat-svg"
                xmlns="http://www.w3.org/2000/svg"
                width="40"
                height="40"
                viewBox="0 0 24 24"
              >
                <path
                  fill="currentColor"
                  d="M4 18v3h3v-3h10v3h3v-6H4v3m15-8h3v3h-3v-3M2 10h3v3H2v-3m15 3H7V5a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v8Z"
                />
              </svg>
            </label>
          ))
        }
      </div>

      <div class="seats-side-container">
        {
          seatsRightSide.map((seat) => (
            <label class="seat-selector">
              <input
                class="seat-input-radio"
                type="radio"
                name="seat"
                id={seat.code}
                required
                value={seat.code}
              />
              <svg
                class="seat-svg"
                xmlns="http://www.w3.org/2000/svg"
                width="40"
                height="40"
                viewBox="0 0 24 24"
              >
                <path
                  fill="currentColor"
                  d="M4 18v3h3v-3h10v3h3v-6H4v3m15-8h3v3h-3v-3M2 10h3v3H2v-3m15 3H7V5a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v8Z"
                />
              </svg>
            </label>
          ))
        }
      </div>
    </div>
  </div>

  <div class="buttons-container">
    <button
      id="generate-ticket-button"
      class="button button-primary"
      type="submit"
      disabled
    >
      <div class="sending-loader-container">
        <Sending />
      </div>
      <span class="generate-ticket-button-text">Generate Ticket</span>
    </button>
    <a id="back-step-button" class="button">Back</a>
  </div>
</form>

<script>
  const seatsSelectionForm = document.getElementById(
    "seats-selection-form",
  ) as HTMLFormElement;
  const generateTicketButton = document.getElementById(
    "generate-ticket-button",
  ) as HTMLButtonElement;

  seatsSelectionForm.addEventListener("input", (event) => {
    const currentTarget = event.currentTarget as HTMLFormElement;
    const formIsValid = currentTarget.checkValidity();
    if (formIsValid) generateTicketButton.disabled = false;
    else generateTicketButton.disabled = true;
  });
</script>

<style>
  .seats-selection-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
  }

  .spaceship {
    max-width: 16rem;
    margin: 0 auto;
    width: 100%;
  }

  .cockpit {
    height: 5rem;
    position: relative;
    overflow: hidden;
    text-align: center;
    border: 0.25rem solid var(--black-50);
    border-radius: 50rem 50rem 0 0;
    display: grid;
    align-items: center;
    color: var(--black);
    font-size: 1.25rem;
  }

  .seats-selection {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: 4rem;
    border: 0.25rem solid var(--black-50);
  }

  .seats-exit-signal-container {
    display: grid;
  }

  .seats-exit-signal {
    background-color: var(--green);
    width: fit-content;
    padding: 0.125rem 0.5rem;
    text-transform: uppercase;
    color: var(--white);
    font-weight: 500;
    margin: 1rem 0;
  }

  .seats-exit-signal-left {
    justify-self: flex-start;
  }

  .seats-exit-signal-right {
    justify-self: flex-end;
  }

  .seats-side-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  .seat-input-radio {
    position: absolute;
    opacity: 0;
  }

  .seat-svg {
    color: var(--black-50);
    transition: color 0.2s;
  }

  .seat-input-radio:checked ~ .seat-svg {
    color: var(--black);
  }

  .seat-selector {
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    position: relative;
  }

  .seat-selector:hover .seat-svg {
    color: var(--black);
  }

  .button {
    border: 1px solid var(--black-50);
    padding: 0.75rem 1.5rem;
    cursor: pointer;
    color: var(--black-50);
    border-radius: 2rem;
    width: fit-content;
    text-align: center;
    font-size: 1rem;
    transition:
      border-color 0.2s,
      color 0.2s;
    font-weight: 500;
  }

  .button:hover {
    color: var(--black);
    border-color: var(--black);
  }

  .button-primary {
    background-color: var(--black);
    color: var(--white);
    font-weight: 500;
    border: none;
    transition:
      background-color 0.2s,
      box-shadow 0.2s,
      color 0.2s;
  }

  .button-primary:hover {
    background-color: var(--white);
    box-shadow: 0 0 1px 1px var(--black);
    color: var(--black);
  }

  .button-primary:disabled {
    opacity: 0.75;
    background-color: var(--black-50);
  }

  .button-primary:disabled:hover {
    background-color: var(--black-50);
    box-shadow: none;
    color: var(--white);
    cursor: not-allowed;
  }

  .buttons-container {
    display: flex;
    gap: 1rem;
  }

  #generate-ticket-button {
    position: relative;
  }

  .sending-loader-container {
    position: absolute;
    margin: auto;
    left: 0;
    right: 0;
    opacity: 0;
    transition: opacity 0.2s;
  }

  .generate-ticket-button-text {
    opacity: 1;
    transition: opacity 0.2s;
  }
  .sending-loader-active {
    opacity: 1;
  }

  .sending-loader-active ~ .generate-ticket-button-text {
    opacity: 0;
  }
</style>
